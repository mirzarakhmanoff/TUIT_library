datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


generator client {
  provider = "prisma-client-js"
}


model Author {
  id   Int    @id @default(autoincrement())
  name String
  bio  String?
  books Book[]
}

model Book {
  id          Int      @id @default(autoincrement())
  title       String
  publishedAt DateTime
  authorId    Int
  author      Author   @relation(fields: [authorId], references: [id])
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  reviews     Review[]
  borrows     Borrow[]
  rating      Float?   // Add this line for rating (optional, but makes sense for your use case)
  image       String?  // Add this line for image (optional)
}

model Student {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
  borrows Borrow[]
  reviews Review[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
}

model Borrow {
  id         Int      @id @default(autoincrement())
  studentId  Int
  student    Student  @relation(fields: [studentId], references: [id])
  bookId     Int
  book       Book     @relation(fields: [bookId], references: [id])
  borrowedAt DateTime
  returnedAt DateTime?
}

model Review {
  id        Int      @id @default(autoincrement())
  content   String
  rating    Int
  createdAt DateTime @default(now())
  studentId Int
  student   Student  @relation(fields: [studentId], references: [id])
  bookId    Int
  book      Book     @relation(fields: [bookId], references: [id])
}
